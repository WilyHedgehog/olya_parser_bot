from telethon.tl.types import Message
import logging
from .telethon_client import app

logger = logging.getLogger(__name__)

async def extract_sender_info(message: Message):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ:
    (entity_name, entity_username, fwd_info)
    """
    entity_name = "Unknown"
    entity_username = None
    fwd_info = []

    try:
        # 1Ô∏è‚É£ –ü—Ä–æ–±—É–µ–º –¥–æ—Å—Ç–∞—Ç—å –∏–∑ message.get_sender()
        user = await message.get_sender()

        if user:
            entity_username = getattr(user, "username", None)
            if not entity_username:
                # –ï—Å–ª–∏ username –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–±—É–µ–º –∑–∞–Ω–æ–≤–æ –ø–æ–ª—É—á–∏—Ç—å entity
                try:
                    user_full = await app.get_entity(user.id)
                    entity_username = getattr(user_full, "username", None)
                except Exception as e:
                    logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å entity –¥–ª—è {user.id}: {e}")

            # –ò–º—è —Å—Ç–∞–≤–∏–º –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –Ω–æ username ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π
            entity_name = (
                f"@{entity_username}"
                if entity_username
                else (getattr(user, "first_name", None) or "Unknown")
            )

        # 2Ô∏è‚É£ –ï—Å–ª–∏ get_sender() –Ω–∏—á–µ–≥–æ –Ω–µ –≤–µ—Ä–Ω—É–ª ‚Äî –ø—Ä–æ–±—É–µ–º –ø–æ from_id
        elif getattr(message, "from_id", None):
            try:
                entity = await app.get_entity(message.from_id)
                entity_username = getattr(entity, "username", None)
                if not entity_username:
                    # –ò–Ω–æ–≥–¥–∞ entity –º–æ–∂–µ—Ç –±—ã—Ç—å —á–∞—Ç–æ–º –±–µ–∑ username ‚Äî fallback
                    entity_username = None
                entity_name = (
                    f"@{entity_username}"
                    if entity_username
                    else getattr(entity, "first_name", None)
                    or getattr(entity, "title", "Unknown")
                )
            except Exception as e:
                logger.debug(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è entity –ø–æ from_id: {e}")

        # 3Ô∏è‚É£ –ï—Å–ª–∏ –∏ from_id –Ω–µ—Ç ‚Äî fallback –Ω–∞ peer_id (—á–∞—Ç/–∫–∞–Ω–∞–ª)
        elif getattr(message, "peer_id", None):
            try:
                peer = await app.get_entity(message.peer_id)
                entity_username = getattr(peer, "username", None)
                entity_name = (
                    f"@{entity_username}"
                    if entity_username
                    else getattr(peer, "title", "Unknown")
                )
            except Exception as e:
                logger.debug(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è entity –ø–æ peer_id: {e}")

    except Exception as e:
        logger.warning(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {e}")

    # -------------------------------------------------------------------
    # 4Ô∏è‚É£ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    # -------------------------------------------------------------------
    if message.forward:
        try:
            # üîπ –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å username –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            fwd_username = None
            fwd_name = None

            if message.forward.sender:
                fwd_user = message.forward.sender
                fwd_username = getattr(fwd_user, "username", None)
                if not fwd_username:
                    try:
                        fwd_user_full = await app.get_entity(fwd_user.id)
                        fwd_username = getattr(fwd_user_full, "username", None)
                    except Exception:
                        pass
                fwd_name = fwd_user.first_name or "Unknown User"

            elif message.forward.chat:
                fwd_chat = message.forward.chat
                fwd_username = getattr(fwd_chat, "username", None)
                fwd_name = getattr(fwd_chat, "title", "Unknown Chat")

            elif getattr(message.forward, "from_id", None):
                try:
                    fwd_entity = await app.get_entity(message.forward.from_id)
                    fwd_username = getattr(fwd_entity, "username", None)
                    fwd_name = (
                        getattr(fwd_entity, "first_name", None)
                        or getattr(fwd_entity, "title", "Unknown")
                    )
                except Exception:
                    fwd_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫"

            # –ò—Ç–æ–≥: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç username > name > fallback
            if fwd_username:
                fwd_info.append(f"@{fwd_username}")
            elif fwd_name:
                fwd_info.append(fwd_name)
            else:
                fwd_info.append("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫")

        except Exception as e:
            logger.info(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ forward: {e}")
            fwd_info = ["–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫"]

    return entity_name, entity_username, fwd_info