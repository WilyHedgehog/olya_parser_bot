services:
  postgres:
    image: postgres:15-alpine
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: superolyauser
      POSTGRES_PASSWORD: 2StDRkCeJJJTNtd
      POSTGRES_DB: data
    command: postgres -c timezone=Europe/Moscow
    volumes:
      - "db_data:/var/lib/postgresql/data"
    networks:
      - botnet

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: olpar@bot.com
      PGADMIN_DEFAULT_PASSWORD: olpar1000
    volumes:
      - "pgadmin_data:/var/lib/pgadmin"
    ports:
      - "8080:80"   # <-- порт на хосте : порт в контейнере
    depends_on:
      - postgres
    networks:
      - botnet


  nats:
    image: nats:latest
    entrypoint: /nats-server
    command: "-c /config/server.conf"
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - ./nats/data:/data
      - ./nats/config:/config
    networks:
      - botnet
  
  nats-nui:
    image: ghcr.io/nats-nui/nui:latest
    container_name: nats-nui
    ports:
      - "31311:31311"  # Порт для доступа к NATS NUI
    volumes:
      - ./nui/db:/db
    depends_on:
      - nats
    networks:
      - botnet


  bot_app:
    build: 
      context: ./  
      dockerfile: dockerfile
    container_name: olya_bot_app
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - nats
    environment:
      DATABASE_URL: postgresql+psycopg://superolyauser:2StDRkCeJJJTNtd@postgres:5432/data
    networks:
      - botnet
    volumes:
      - ./:/app

  bot_worker:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: olya_bot_worker
    restart: always
    depends_on:
      - nats
      - postgres
    networks:
      - botnet
    volumes:
      - ./:/app
    command: >
      taskiq worker bot.background_tasks.broker -fsd
      taskiq scheduler bot.background_tasks.broker -fsd


volumes:
  db_data:
  pgadmin_data:

networks:
  botnet:
    driver: bridge